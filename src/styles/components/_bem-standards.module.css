/* ==========================================================================
   CSS Modules BEMÂëΩÂêçË¶èÂâá - 2025Âπ¥Áµ±‰∏ÄÂü∫Ê∫ñ
   ========================================================================== */

/*
 * üéØ ÂëΩÂêçË¶èÂâá: [Block]__[Element]--[Modifier]
 * 
 * ‚úÖ Ê≠£„Åó„ÅÑ‰æã:
 * .gameScreen { }                    // Block
 * .gameScreen__container { }         // Element  
 * .gameScreen__container--large { }  // Modifier
 * .typingArea { }                    // Block
 * .typingArea__text { }             // Element
 * .typingArea__text--highlighted { } // Modifier
 * 
 * ‚ùå ÈÅø„Åë„Çã„Åπ„Åç‰æã:
 * .GameScreen { }           // PascalCase
 * .game-screen { }          // kebab-case
 * .game_screen_container { } // snake_caseÊ∑∑Âú®
 */

/* ==========================================================================
   Block Level Components
   ========================================================================== */

/* Game Screen - „É°„Ç§„É≥„Ç≤„Éº„É†ÁîªÈù¢ */
.gameScreen {
  container: game-screen / inline-size;
  width: 100%;
  block-size: var(--viewport-height-dynamic);
  background: var(--color-game-bg-primary);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-family: var(--font-family-primary);
  color: var(--color-game-text-primary);
  overflow: hidden;
}

/* Main Menu - „É°„Ç§„É≥„É°„Éã„É•„Éº */
.mainMenu {
  container: main-menu / inline-size;
  width: 100%;
  min-block-size: var(--viewport-height-dynamic);
  display: grid;
  place-items: center;
  background: var(--color-game-bg-primary);
}

/* Modal - „É¢„Éº„ÉÄ„É´„ÉÄ„Ç§„Ç¢„É≠„Ç∞ */
.modal {
  container: modal / inline-size;
  position: fixed;
  inset: 0;
  z-index: var(--z-index-modal);
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--color-bg-overlay);
  backdrop-filter: blur(8px);
}

/* ==========================================================================
   Element Level Components
   ========================================================================== */

/* Game Screen Elements */
.gameScreen__header {
  width: 100%;
  max-inline-size: 720px;
  display: flex;
  justify-content: center;
  margin-block-end: var(--spacing-lg);
}

.gameScreen__content {
  flex: 1;
  width: 100%;
  max-inline-size: 720px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: var(--spacing-md);
}

.gameScreen__footer {
  width: 100%;
  max-inline-size: 720px;
  display: flex;
  justify-content: center;
  margin-block-start: var(--spacing-lg);
}

/* Typing Container Elements */
.typingContainer {
  container: typing-area / inline-size;
  inline-size: min(90%, 720px);
  padding: var(--spacing-xl);
  background: var(--color-game-window-bg);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-game);
  text-align: center;
}

.typingContainer__header {
  margin-block-end: var(--spacing-lg);
}

.typingContainer__content {
  margin-block-end: var(--spacing-lg);
}

.typingContainer__footer {
  margin-block-start: var(--spacing-lg);
}

/* Text Elements */
.textDisplay {
  container: text-display / inline-size;
}

.textDisplay__japanese {
  font-size: var(--font-size-game-text);
  font-weight: var(--font-weight-bold);
  line-height: var(--line-height-relaxed);
  color: var(--color-game-text-primary);
  margin-block-end: var(--spacing-md);
}

.textDisplay__romaji {
  font-size: var(--font-size-game-subtitle);
  font-weight: var(--font-weight-medium);
  line-height: var(--line-height-normal);
  letter-spacing: var(--letter-spacing-wide);
  white-space: pre-wrap;
}

/* Button Elements */
.button {
  container: button / inline-size;
  min-inline-size: var(--touch-target-min);
  min-block-size: var(--touch-target-min);
  padding-inline: var(--spacing-lg);
  padding-block: var(--spacing-md);
  border: 1px solid var(--color-border-primary);
  border-radius: var(--radius-md);
  background: var(--color-bg-surface);
  color: var(--color-text-primary);
  font-family: inherit;
  font-size: var(--font-size-game-ui);
  font-weight: var(--font-weight-medium);
  cursor: pointer;
  transition: var(--animation-fade), var(--animation-scale);
  will-change: var(--will-change-transform);
}

/* ==========================================================================
   Modifier States
   ========================================================================== */

/* Game Screen Modifiers */
.gameScreen--loading {
  cursor: wait;
}

.gameScreen--fullscreen {
  position: fixed;
  inset: 0;
  z-index: var(--z-index-overlay);
}

/* Text State Modifiers */
.textDisplay__char--typed {
  color: var(--color-game-typed);
  background: var(--color-interactive-active);
}

.textDisplay__char--active {
  color: var(--color-game-focus);
  background: var(--color-interactive-hover);
  outline: 2px solid var(--color-border-focus);
}

.textDisplay__char--remaining {
  color: var(--color-game-remaining);
  opacity: 0.7;
}

.textDisplay__char--error {
  color: var(--color-error);
  background: color-mix(in srgb, var(--color-error) 20%, transparent);
  animation: shake var(--duration-fast) var(--easing-bounce);
}

/* Button State Modifiers */
.button--primary {
  background: var(--color-brand-primary);
  color: var(--color-text-inverse);
  border-color: var(--color-brand-primary);
}

.button--secondary {
  background: var(--color-brand-secondary);
  color: var(--color-text-inverse);
  border-color: var(--color-brand-secondary);
}

.button--disabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

.button--loading {
  position: relative;
  color: transparent;
}

.button--loading::after {
  content: '';
  position: absolute;
  inset: 50%;
  inline-size: 1em;
  block-size: 1em;
  margin: -0.5em 0 0 -0.5em;
  border: 2px solid currentColor;
  border-top-color: transparent;
  border-radius: 50%;
  animation: spin var(--duration-slow) linear infinite;
}

/* Size Modifiers */
.button--sm {
  min-inline-size: auto;
  min-block-size: auto;
  padding-inline: var(--spacing-md);
  padding-block: var(--spacing-sm);
  font-size: var(--font-size-sm);
}

.button--lg {
  padding-inline: var(--spacing-xl);
  padding-block: var(--spacing-lg);
  font-size: var(--font-size-lg);
}

/* ==========================================================================
   Container Queries - 2025 Modern Responsive
   ========================================================================== */

/* Game Screen Container Queries */
@container game-screen (inline-size < 768px) {
  .gameScreen__content {
    gap: var(--spacing-sm);
  }
  
  .typingContainer {
    inline-size: 95%;
    padding: var(--spacing-md);
  }
}

@container game-screen (768px <= inline-size < 1024px) {
  .gameScreen__content {
    gap: var(--spacing-md);
  }
}

@container game-screen (inline-size >= 1024px) {
  .gameScreen__content {
    gap: var(--spacing-lg);
  }
  
  .typingContainer {
    padding: var(--spacing-2xl);
  }
}

/* Typing Container Queries */
@container typing-area (inline-size < 400px) {
  .textDisplay__japanese {
    font-size: var(--font-size-lg);
  }
  
  .textDisplay__romaji {
    font-size: var(--font-size-base);
  }
}

@container typing-area (inline-size >= 600px) {
  .textDisplay__japanese {
    font-size: var(--font-size-2xl);
  }
  
  .textDisplay__romaji {
    font-size: var(--font-size-xl);
  }
}

/* ==========================================================================
   Animations & Performance
   ========================================================================== */

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-4px); }
  75% { transform: translateX(4px); }
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* GPU Acceleration for Animation Elements */
.textDisplay__char--active,
.button:hover,
.modal {
  will-change: var(--will-change-transform);
}

/* Performance: Remove will-change after animation */
.textDisplay__char:not(.textDisplay__char--active),
.button:not(:hover),
.modal:not(.modal--animating) {
  will-change: auto;
}
